{
	"name": "df_silver_Clientes",
	"properties": {
		"folder": {
			"name": "SILVER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_tabla_Clientes",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sql_silver_Clientes",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "cast1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          cst_id as string,",
				"          cst_key as string,",
				"          cst_firstname as string,",
				"          cst_lastname as string,",
				"          cst_marital_status as string,",
				"          cst_gndr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(cst_id = iif(\r",
				"  isNull(cst_id) || !isInteger(replace(toString(cst_id), '.0', '')),\r",
				"  toLong(null()),\r",
				"  toLong(replace(toString(cst_id), '.0', ''))\r",
				")\r",
				"\r",
				"\r",
				"\r",
				") ~> derivedColumn1",
				"filter1 derive(cst_marital_status = iif(\r",
				"    isNull(cst_marital_status) || length(trim(cst_marital_status)) == 0,\r",
				"    'Unknown',\r",
				"    iif(\r",
				"        equals(trim(cst_marital_status), 'M'), \r",
				"        'Married', \r",
				"        iif(\r",
				"            equals(trim(cst_marital_status), 'S'), \r",
				"            'Single', \r",
				"            trim(cst_marital_status)\r",
				"        )\r",
				"    )\r",
				")) ~> derivedColumn2",
				"derivedColumn2 derive(cst_gndr = iif(\r",
				"    isNull(cst_gndr) || length(trim(cst_gndr)) == 0,\r",
				"    'Unknown',\r",
				"    iif(\r",
				"        equals(trim(cst_gndr), 'M'), \r",
				"        'Male', \r",
				"        iif(\r",
				"            equals(trim(cst_gndr), 'F'), \r",
				"            'Female', \r",
				"            trim(cst_gndr)\r",
				"        )\r",
				"    )\r",
				")) ~> derivedColumn3",
				"derivedColumn3 derive(cst_firstname = iif(isNull(cst_firstname), 'Unknown', trim(cst_firstname)),",
				"          cst_lastname = iif(isNull(cst_lastname), 'Unknown', trim(cst_lastname))) ~> derivedColumn4",
				"derivedColumn4 cast(output(",
				"          cst_id as long,",
				"          cst_key as string,",
				"          cst_firstname as string,",
				"          cst_lastname as string,",
				"          cst_marital_status as string,",
				"          cst_gndr as string",
				"     ),",
				"     errors: true) ~> cast1",
				"derivedColumn1 filter(!isNull(cst_id) && cst_id != 0",
				") ~> filter1",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cst_id as long,",
				"          cst_key as string,",
				"          cst_firstname as string,",
				"          cst_lastname as string,",
				"          cst_marital_status as string,",
				"          cst_gndr as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          cst_id,",
				"          cst_key,",
				"          cst_firstname,",
				"          cst_lastname,",
				"          cst_marital_status,",
				"          cst_gndr",
				"     )) ~> sink1"
			]
		}
	}
}